plugins {
    id 'net.ltgt.apt' version '0.10'
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
}

import org.gradle.internal.os.OperatingSystem;

def lwjgl_ver = '2.9.3'
def platform = ''
if (OperatingSystem.current().isWindows()) {
    platform = 'windows'
} else if (OperatingSystem.current().isMacOsX()) {
    platform = 'osx'
} else if (OperatingSystem.current().isLinux()) {
    platform = 'linux'
}
def slf4jVersion = '1.7.21'
def log4jVersion = '2.5'

dependencies {
    compile (['org.lwjgl.lwjgl:lwjgl:'      + lwjgl_ver],
             ['org.lwjgl.lwjgl:lwjgl_util:' + lwjgl_ver])
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4jVersion

    compileOnly 'org.projectlombok:lombok:1.16.20'
    apt "org.projectlombok:lombok:1.16.20"
}

sourceSets {
    main {
        java.srcDirs      = ['src']
        resources.srcDirs = ['resources']
    }
}

mainClassName = 'lwjake2.LWJake2'
applicationDefaultJvmArgs = ["-Djava.library.path=$buildDir/natives/$platform"]

task t1(type: Copy) {
    configurations.compile.filter {
        (it.getName().indexOf("lwjgl-platform-") >= 0) &&
        (it.getName().indexOf("$platform") >= 0)
    }.each {
        includeEmptyDirs = false
        from (zipTree(it)) {
            exclude "META-INF/*"
        }
        into "$buildDir/natives/$platform"
    }

}
